
REST : Representational State Transfer 
SOAP : single object Access protocol 

REST started in 1999

Principle 1 Everything is a resource {Images,videos , text etc}
Principle 2 Each source is identified by unique identifier {jpeg , png etc }
Principle 3 Manipulation of different resouces is standard {Get , Post , Delete , Trace etc }
Principle 4 Resource can have multiple representation
Principle 5 communicate with the resource in a stateless manner

Statelessness of restful api isolates the caller from the changes in the server side 
the caller is not expected to communicate with the same server everytime 

Developers reject simple solutions and turn complex ones into more complex 

When it comes to data transfer it should not be a complex solution 

A software component is a unit of 
composition with contractually 
specified interfaces and explicit
context dependencies only.
A software component can be deployed 
independently and is subject to composition by third party

Advantages 

Scalability (Easily updated removed)
Enhanced Quality (Cleaner Code {Declairative})
Reduced Cost & Schedule (Reused)
Customization and Flexibility (Adaptable)
Increased Maintainability {Availability of alternattives}
Reduced Risk {Availability of alternattives}

Chalenges 

Heterogeneity of Components (programming language, platform, data structure, naming conventions etc.)
Optimal Component Selection (Component selection is NP)
Expensive and Inadequate Component Testing (Headache)
Complex Interface Specification (This is what I was afraid of)


Continuous Versioning (Same as any other paradigm)
Improper Working due to Application Level Changes

Software Methodologies 

1- Waterfall Model (Simple , Not excellent for long and ongoing projects)
{Requirement Gathering,System Design,Implement,Test,Deploy,Maintain}
2-Prototype Methodology (It is a specialized software development)
{Make sample present it then optimize it before making the final solution}
3-Agile Software Development Methodology (Certainly, such type of a methodology 
is one theoretical outline for undertaking several software engineering projects. )


